set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" Keep Plugin commands between vundle#begin/end.

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'git://github.com/tpope/vim-commentary.git'
Plugin 'https://github.com/scrooloose/nerdtree.git'
Plugin 'https://github.com/tmhedberg/matchit.git'
Plugin 'https://github.com/nathanaelkane/vim-indent-guides.git'
Plugin 'https://github.com/ntpeters/vim-better-whitespace.git'
Plugin 'https://github.com/kien/ctrlp.vim.git'
Plugin 'https://github.com/evidens/vim-twig.git'
Plugin 'https://github.com/terryma/vim-multiple-cursors.git'
Plugin 'git@github.com:Valloric/YouCompleteMe.git'
Plugin 'https://github.com/leafgarland/typescript-vim.git'
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
execute pathogen#infect()
syntax on
set runtimepath^=~/.vim/bundle/ctrlp.vim
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red   ctermbg=3
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=4
filetype plugin indent on
filetype plugin on
syntax enable
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
set number
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
set ruler
set ignorecase
set smartcase
set showmatch
set noerrorbells
set novisualbell
set t_vb=
set tm=500
set ai "Auto indent
set si "Smart indent
set wrap "Wrap lines
set noexpandtab
retab!
set tabstop=2
set shiftwidth=2
set expandtab
retab!
let g:lapis = 1
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_map = '<c-p>'
let g:ctrlp_match_window_bottom = 0
let g:ctrlp_match_window_reversed = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_dotfiles = 0
let g:ctrlp_switch_buffer = 0
nmap ; :CtrlP<CR>
colorscheme lapis
let g:indentLine_color_term = 239
nnoremap <C-j> :m .+1<CR>==
nnoremap <C-k> :m .-2<CR>==
inoremap <C-j> <ESC>:m .+1<CR>==gi
inoremap <C-k> <ESC>:m .-2<CR>==gi
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gv
